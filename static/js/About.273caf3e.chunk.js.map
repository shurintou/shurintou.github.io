{"version":3,"file":"static/js/About.273caf3e.chunk.js","mappings":"qLAMMA,EAAqC,SAACC,GACxC,IAAQC,EAAWD,EAAXC,OAeR,OAbAC,EAAAA,EAAAA,YAAU,YACN,SAAsBD,GAClB,IAAIE,EAAcC,EAAAA,EAAAA,SAClBD,EAAYE,OAASJ,EACrBE,EAAYG,QAAUF,EAAAA,EAAAA,UAAAA,oBACP,IAAIG,IAAJ,CAAWJ,GACnBK,OAAO,oBAElBC,CAAaR,KAGd,KAGC,gBAAKS,GAAG,sBAMhB,IAFqB,SAACV,GAAD,OAAwB,SAACD,GAAD,UAAiBC,M,mCC3B9D,IAAMW,EAAWC,EAAQ,OAoBnBC,EAAY,CACdC,SAAUC,KAAKC,MAAML,EAASM,IAAIC,QAHpB,mQAJC,aAOkDC,SAASR,EAASS,IAAIC,OACvFC,UAAW,CACPC,WAAY,UACZC,YAAa,UACbC,qBAAsB,UACtBC,oBAAqB,WAEzBC,UAAW,CACPC,yBAA0B,EAC1BC,oBAAqB,GACrBC,YAAa,GAEjBC,WAAY,CACRC,oBAAqB,IAEzBC,WAAY,CACRC,oBAAqB,IACrBC,oBAAqB,KAEzBC,cAAe,CACXC,kBAAmB,UACnBC,cAAe,YAIvB,O,yPC7CA,EAA0B,uBAA1B,EAA2D,uBAA3D,EAA4F,uBAA5F,EAA6H,uBAA7H,EAAgK,yB,WCKxJC,EAAsBC,EAAAA,EAAAA,KAAhBC,EAAgBD,EAAAA,EAAAA,MAATE,EAASF,EAAAA,EAAAA,KAETG,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAIjB,WAAY3C,GAAgB,IAAD,yBACvB,cAAMA,IAJF4C,gBAGmB,IAFnBC,8BAEmB,IADnBC,oBACmB,EAEvB,EAAKF,WAAa,GAClB,EAAKG,MAAQ,CACTC,aAAcC,OAAOC,YAAc,KAAOC,SAASC,gBAAgBC,aAAe,IAClFC,QAAS,EAAC,GAAO,GAAO,GAAO,GAC/BC,iBAAkB,IAClBC,iBAAkBP,OAAOC,YAAcC,SAASC,gBAAgBC,YAChEI,kBAAmBR,OAAOS,aAAeP,SAASC,gBAAgBO,aAClEC,iBAAkB,WACd,IAAMC,EAAsBZ,OAAOC,YAAcC,SAASC,gBAAgBC,YACpES,EAAuBb,OAAOS,aAAeP,SAASC,gBAAgBO,aAC5E,EAAKI,SAAS,CAAER,gBAAiBM,GAAuB,KAAQC,EAAuB,GAAOA,EAAuB,IACrH,EAAKC,SAAS,CAAEf,aAAca,GAAuB,MACrD,EAAKE,SAAS,CAAEP,iBAAkBK,IAClC,EAAKE,SAAS,CAAEN,kBAAmBK,KAEvCE,iBAAkB,WAEd,IADA,IAAIC,EAA6B,EAAKlB,MAAMO,QACnCY,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMC,EAAS,EAAKvB,WAAWsB,GAC3BC,IAAWF,EAAWC,IACtBD,EAAWG,OAAOF,EAAG,EAAG,EAAKnB,MAAMU,kBAAoBU,EAAOE,wBAAwBC,IAAO,EAAKvB,MAAMQ,iBAGhH,EAAKQ,SAAS,CAAET,QAASW,MAGjC,EAAKpB,0BAA2B0B,EAAAA,EAAAA,IAAS,EAAKxB,MAAMa,iBAAkBxD,EAAAA,EAAAA,WAAAA,qBACtE,EAAK0C,eAAiB,WAClB,IAAM0B,EAA2BrB,SAASsB,eAAe,oBACrDD,IACAE,EAAAA,EAAAA,IAAYF,EAAU,MAhCP,EAmJ1B,OAhHA,yCAGD,WACIG,KAAK5B,MAAMa,mBACXe,KAAK5B,MAAMiB,mBACXf,OAAO2B,iBAAiB,SAAUD,KAAK9B,0BACvCI,OAAO2B,iBAAiB,SAAUD,KAAK5B,MAAMiB,oBAChD,kCAED,WACIf,OAAO4B,oBAAoB,SAAUF,KAAK9B,0BAC1CI,OAAO4B,oBAAoB,SAAUF,KAAK5B,MAAMiB,oBACnD,oBAED,WAAU,IAAD,OACCc,EAAsBH,KAAK5B,MAAMC,aAAe,OAAS,OACzD+B,EAAqBJ,KAAK5B,MAAMC,aAAe,OAAS,GACxDgC,EAAsBL,KAAK5B,MAAMC,aAAe,OAAS,OACzDiC,EAAqBN,KAAK5B,MAAMC,aAAe,OAAS,GACxDkC,EAAkBP,KAAK5B,MAAMC,aAAe,4BAA8B,yBAC1EmC,EAAkBR,KAAK5B,MAAMC,aAAe,+BAAiC,yBACnF,OACI,UAAC,IAAD,YACI,UAAC,IAAD,CAAOoC,UAAU,WAAWC,KAAM,QAAlC,WACI,UAAC,IAAD,YACI,SAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEH,KAAM,GAAII,KAAM,IAAMC,GAAI,CAAEL,KAAM,GAAII,KAAM,IAAME,MAAO,CAAEC,OAAQhB,GAAuBiB,IAAK,SAAAC,GAAE,OAAI,EAAKpD,WAAW,GAAKoD,GAA3L,SACKrB,KAAK5B,MAAMO,QAAQ,KAAM,gBAAK2C,UAAWC,EAAuBL,MAAO,CAAEM,MAAO,OAAQL,OAAQ,aAErG,SAAC,IAAD,CAAKR,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEH,KAAM,GAAIa,KAAM,IAAMR,GAAI,CAAEL,KAAM,GAAIa,KAAM,IAAMP,MAAO,CAAEC,OAAQf,GAApI,UAEI,UAAC,IAAD,CAAQc,MAAO,CAAEQ,QAASnB,GAA1B,WACI,SAACzC,EAAD,CAAO6D,MAAO,EAAd,yBACA,cAAGL,UAAWC,EAAd,qGAGA,eAAGD,UAAWC,EAAd,kGACwF,SAAC3D,EAAD,CAAMgE,UAAQ,EAAd,6BADxF,oDAQZ,SAAC,IAAD,KACA,UAAC,IAAD,YACI,SAAC,IAAD,CAAKjB,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEH,KAAM,IAAMK,GAAI,CAAEL,KAAM,IAAMM,MAAO,CAAEC,OAAQd,GAAuBe,IAAK,SAAAC,GAAE,OAAI,EAAKpD,WAAW,GAAKoD,GAAvK,SACKrB,KAAK5B,MAAMO,QAAQ,KAAM,gBAAK2C,UAAWC,EAAuBL,MAAO,CAAEM,MAAO,OAAQL,OAAQ,aAErG,SAAC,IAAD,CAAKR,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEH,KAAM,IAAMK,GAAI,CAAEL,KAAM,IAAMM,MAAO,CAAEC,OAAQb,GAAhH,UACI,UAAC,IAAD,CAAQY,MAAO,CAAEQ,QAASlB,GAA1B,WACI,SAAC1C,EAAD,CAAO6D,MAAO,EAAd,uBACA,eAAGL,UAAWC,EAAd,uBACa,SAAC3D,EAAD,CAAMgE,UAAQ,EAAd,mBADb,0KAKA,eAAGN,UAAWC,EAAd,iCACuB,SAAC3D,EAAD,CAAMgE,UAAQ,EAAd,mBADvB,4BAC2E,IAAIC,MAAOC,cAAgB,KADtG,oFAMZ,SAAC,IAAD,KACA,UAAC,IAAD,YACI,SAAC,IAAD,CAAKnB,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEH,KAAM,GAAII,KAAM,IAAMC,GAAI,CAAEL,KAAM,GAAII,KAAM,IAAME,MAAO,CAAEC,OAAQd,GAAuBe,IAAK,SAAAC,GAAE,OAAI,EAAKpD,WAAW,GAAKoD,GAA3L,SACKrB,KAAK5B,MAAMO,QAAQ,KAAM,gBAAK2C,UAAWC,EAAuBL,MAAO,CAAEM,MAAO,OAAQL,OAAQ,aAErG,SAAC,IAAD,CAAKR,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEH,KAAM,GAAIa,KAAM,IAAMR,GAAI,CAAEL,KAAM,GAAIa,KAAM,IAAMP,MAAO,CAAEC,OAAQb,GAApI,UACI,UAAC,IAAD,CAAQY,MAAO,CAAEQ,QAASnB,GAA1B,WACI,SAACzC,EAAD,CAAO6D,MAAO,EAAd,2BACA,eAAGL,UAAWC,EAAd,oBACU,SAAC3D,EAAD,CAAMgE,UAAQ,EAAd,4BADV,qIAIA,eAAGN,UAAWC,EAAd,8DACoD,SAAC3D,EAAD,CAAMgE,UAAQ,EAAd,sBADpD,sGAOZ,SAAC,IAAD,KACA,UAAC,IAAD,YACI,SAAC,IAAD,CAAKjB,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEH,KAAM,IAAMK,GAAI,CAAEL,KAAM,IAAMM,MAAO,CAAEC,OAAQd,GAAuBe,IAAK,SAAAC,GAAE,OAAI,EAAKpD,WAAW,GAAKoD,GAAvK,SACKrB,KAAK5B,MAAMO,QAAQ,KAAM,gBAAK2C,UAAWC,EAAuBL,MAAO,CAAEM,MAAO,OAAQL,OAAQ,aAErG,SAAC,IAAD,CAAKR,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IAAMG,GAAI,CAAEH,KAAM,IAAMK,GAAI,CAAEL,KAAM,IAAMM,MAAO,CAAEC,OAAQb,GAAhH,UACI,UAAC,IAAD,CAAQY,MAAO,CAAEQ,QAASlB,GAA1B,WACI,SAAC1C,EAAD,CAAO6D,MAAO,EAAd,+BACA,iBAAKL,UAAWC,EAAsBL,MAAO,CAAEa,aAAc,OAA7D,qFAC2E,SAACnE,EAAD,CAAMoE,UAAQ,EAACC,WAAS,EAAxB,iCAD3E,qCAEmC,SAACrE,EAAD,CAAMqE,WAAS,EAAf,UAAgB,SAAClE,EAAD,CAAMmE,QAASlC,KAAK7B,eAApB,6BAFnD,cAIA,eAAGmD,UAAWC,EAAd,wIAC8H,SAAC3D,EAAD,CAAMqE,WAAS,EAAf,UAAgB,SAAClE,EAAD,CAAMoE,KAAK,uCAAuCC,OAAO,SAAzD,+BAD9I,iBAMZ,SAAC,IAAD,KACA,UAAC,IAAD,YACI,SAAC,IAAD,CAAKzB,GAAI,EAAGE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGE,GAAI,KAErC,SAAC,IAAD,CAAKN,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIE,GAAI,GAAzC,UACI,SAAC,IAAD,CAAQ3F,OAAQG,EAAAA,EAAAA,WAAAA,+BAI5B,SAAC,IAAD,CAAS2G,OAAQ,kBAAM5D,mBAGlC,EAvJgBR,CAAcqE,EAAAA,Y","sources":["components/others/gitalk/index.tsx","config/config.ts","webpack://my-blog/./src/pages/about/index.module.css?b913","pages/about/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport Gitalk from \"gitalk\"\nimport 'gitalk/dist/gitalk.css'\nimport { GitalkProps } from '../../../types/index'\nimport config from '../../../config/config'\n\nconst GitalkCompo: React.FC<GitalkProps> = (props) => {\n    const { blogId } = props\n\n    useEffect(() => {\n        function renderGitalk(blogId: number) {\n            let gitalkProps = config.gitProps\n            gitalkProps.number = blogId\n            gitalkProps.perPage = config.blogProps.commentCountPerPage\n            const gitalk = new Gitalk(gitalkProps)\n            gitalk.render('gitalk-container')\n        }\n        renderGitalk(blogId)\n\n        /* eslint-disable-next-line */\n    }, [])\n\n    return (\n        <div id=\"gitalk-container\"></div>\n    )\n}\n\nconst GitalkModule = (props: GitalkProps) => <GitalkCompo {...props}></GitalkCompo>\n\nexport default GitalkModule","const cryptoJS = require('crypto-js')\n// const repo = 'shurintou.github.io'\n// const owner = 'shurintou'\n// const username = 'bd40dd16da37715c96f5'\n// const password = '8853dce879c0f8a6ca9364f3f242b23dadeccfc1'\n// const gitalkProps = {\n//     clientID: username,\n//     clientSecret: password,\n//     repo: repo,\n//     owner: owner,\n//     admin: ['shurintou'],\n// }\n\n\nconst cryptoSalt = '#5A8y9D3H'\n\n// const cryptoStr = cryptoJS.AES.encrypt(JSON.stringify(gitalkProps), cryptoSalt).toString()\n// console.log(cryptoStr)\nconst cryptoStr = 'U2FsdGVkX1/yP8nxmnwCgclip9zKyEs+uQjo/TvmWsLMppbKgdm8JT3LypvXZvgS2dIA9wm4el/No0W3juPeH/xISMIoPZ5pS9FwWue6tRfIOzXc3gm760yEM5+BD6siILxyAHue0vrgT8kd8fThQw5Gg+L1I0qvb7HQKn8Mavq7k3n2acrYnWbcJzzPbNXjHrH/HTaN0V/OkeT3lqWnlh9qmR2XfUACprQ4Gqh+8z6JCK2SxlCF70NYRdWRLuy0'\n\nconst configObj = {\n    gitProps: JSON.parse(cryptoJS.AES.decrypt(cryptoStr, cryptoSalt).toString(cryptoJS.enc.Utf8)),\n    antdProps: {\n        themeColor: '#1DA57A',\n        borderColor: '#d0d7de',\n        titleBackgroundColor: '#d0d7de',\n        paginationTextColor: '#FFFFFF',\n    },\n    blogProps: {\n        blogListItemCountPerPage: 5,\n        commentCountPerPage: 10,\n        previewLine: 5,\n    },\n    aboutProps: {\n        messageBoardIssueId: 10\n    },\n    eventProps: {\n        resizeDebounceDelay: 300,\n        scrollDebounceDelay: 100,\n    },\n    markdownProps: {\n        trBackgroundColor: '#f6f8fa',\n        trBorderColor: '#d0d7de',\n    },\n}\n\nexport default configObj","// extracted by mini-css-extract-plugin\nexport default {\"about-1\":\"about_about-1__pzV2S\",\"about-2\":\"about_about-2__S-2ZA\",\"about-3\":\"about_about-3__b3MYc\",\"about-4\":\"about_about-4__voaZb\",\"aboutText\":\"about_aboutText__DiDM3\"};","import React from 'react'\nimport { Layout, Row, Col, Typography, Space, Divider, BackTop, } from 'antd'\nimport Gitalk from '../../components//others/gitalk'\nimport config from '../../config/config'\nimport { debounce, doScrolling } from '../../utils/common'\nimport aboutStyle from './index.module.css'\nconst { Text, Title, Link } = Typography\n\nexport default class About extends React.Component<{}, { [key: string]: any }>  {\n    private imgDivRefs: Array<HTMLDivElement | null>\n    private windowResizeDebounceFunc: () => any\n    private scrollToGitalk: () => any\n    constructor(props: Object) {\n        super(props)\n        this.imgDivRefs = []\n        this.state = {\n            pcRenderMode: window.innerWidth >= 992 || document.documentElement.clientWidth >= 992,\n            loadImg: [false, false, false, false],\n            showImgDistance: -100,\n            windowInnerWidth: window.innerWidth || document.documentElement.clientWidth,\n            windowInnerHeight: window.innerHeight || document.documentElement.clientHeight,\n            windowResizeFunc: () => {\n                const newWindowInnerWidth = window.innerWidth || document.documentElement.clientWidth\n                const newWindowInnerHeight = window.innerHeight || document.documentElement.clientHeight\n                this.setState({ showImgDistance: newWindowInnerWidth >= 992 ? (-newWindowInnerHeight / 4) : (-newWindowInnerHeight / 3) })\n                this.setState({ pcRenderMode: newWindowInnerWidth >= 992 })\n                this.setState({ windowInnerWidth: newWindowInnerWidth })\n                this.setState({ windowInnerHeight: newWindowInnerHeight })\n            },\n            windowScrollFunc: () => {\n                let newLoadImg: Array<boolean> = this.state.loadImg\n                for (let i = 0; i < 4; i++) {\n                    const imgDiv = this.imgDivRefs[i]\n                    if (imgDiv && !newLoadImg[i]) {\n                        newLoadImg.splice(i, 1, this.state.windowInnerHeight - imgDiv.getBoundingClientRect().top > (this.state.showImgDistance))\n                    }\n                }\n                this.setState({ loadImg: newLoadImg })\n            }\n        }\n        this.windowResizeDebounceFunc = debounce(this.state.windowResizeFunc, config.eventProps.resizeDebounceDelay)\n        this.scrollToGitalk = () => {\n            const gitalkEl: Element | null = document.getElementById('gitalk-container')\n            if (gitalkEl) {\n                doScrolling(gitalkEl, 500)\n            }\n        }\n    }\n\n\n    componentDidMount() {\n        this.state.windowResizeFunc()\n        this.state.windowScrollFunc()\n        window.addEventListener('resize', this.windowResizeDebounceFunc)\n        window.addEventListener('scroll', this.state.windowScrollFunc)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.windowResizeDebounceFunc)\n        window.removeEventListener('scroll', this.state.windowScrollFunc)\n    }\n\n    render() {\n        const imageContent1Height = this.state.pcRenderMode ? '35em' : '25em'\n        const textContent1Height = this.state.pcRenderMode ? '35em' : ''\n        const imageContent2Height = this.state.pcRenderMode ? '30em' : '25em'\n        const textContent2Height = this.state.pcRenderMode ? '30em' : ''\n        const content1Padding = this.state.pcRenderMode ? '3.75rem 3rem 1.75rem 3rem' : '1em 0.5rem 0rem 0.5rem'\n        const content2Padding = this.state.pcRenderMode ? '4.25rem 3rem 1.75rem 4.25rem' : '1em 0.5rem 0rem 0.5rem'\n        return (\n            <Layout>\n                <Space direction=\"vertical\" size={'large'}>\n                    <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 12, push: 12 }} xl={{ span: 12, push: 12 }} style={{ height: imageContent1Height }} ref={el => this.imgDivRefs[0] = el}>\n                            {this.state.loadImg[0] && <div className={aboutStyle['about-1']} style={{ width: '100%', height: '100%' }}></div>}\n                        </Col>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 12, pull: 12 }} xl={{ span: 12, pull: 12 }} style={{ height: textContent1Height }}>\n\n                            <Layout style={{ padding: content1Padding }}>\n                                <Title level={1}>About Blog</Title>\n                                <p className={aboutStyle.aboutText}>\n                                    This is a blog that I regularly share some thoughts and experiences in my coding life.\n                                </p>\n                                <p className={aboutStyle.aboutText}>\n                                    The topic will mostly includes web development languages that address most facets of<Text keyboard>Web Programming</Text>,\n                                    such as Java, Javascript and so on.\n                                </p>\n                            </Layout>\n\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 10 }} xl={{ span: 10 }} style={{ height: imageContent2Height }} ref={el => this.imgDivRefs[1] = el}>\n                            {this.state.loadImg[1] && <div className={aboutStyle['about-2']} style={{ width: '100%', height: '100%' }}></div>}\n                        </Col>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 14 }} xl={{ span: 14 }} style={{ height: textContent2Height }}>\n                            <Layout style={{ padding: content2Padding }}>\n                                <Title level={1}>About Me</Title>\n                                <p className={aboutStyle.aboutText}>\n                                    I am from<Text keyboard>China</Text>.\n                                    I came to Japan in 2013 and after 2 years Japanese study plus 3 years university research,\n                                    I finally graduated from The University of Tokyo with a master degree.\n                                </p>\n                                <p className={aboutStyle.aboutText}>\n                                    I currently work in<Text keyboard>Tokyo</Text>as a web developer with {new Date().getFullYear() - 2019} years work experience and several successful projects under my belt.\n                                </p>\n                            </Layout>\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 10, push: 14 }} xl={{ span: 10, push: 14 }} style={{ height: imageContent2Height }} ref={el => this.imgDivRefs[2] = el}>\n                            {this.state.loadImg[2] && <div className={aboutStyle['about-3']} style={{ width: '100%', height: '100%' }} ></div>}\n                        </Col>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 14, pull: 10 }} xl={{ span: 14, pull: 10 }} style={{ height: textContent2Height }}>\n                            <Layout style={{ padding: content1Padding }}>\n                                <Title level={1}>Why Coding ?</Title>\n                                <p className={aboutStyle.aboutText}>\n                                    I like<Text keyboard>Creating Stuff</Text>and that's exactly what coding does.\n                                    It makes a idea from zero to reality, from which I got great excitement and satisfaction.\n                                </p>\n                                <p className={aboutStyle.aboutText}>\n                                    Besides, the world of computer science is always<Text keyboard>Changing</Text>.\n                                    Learning a new technology, language, design pattern or framework keeps me passionate.\n                                </p>\n                            </Layout>\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 10 }} xl={{ span: 10 }} style={{ height: imageContent2Height }} ref={el => this.imgDivRefs[3] = el}>\n                            {this.state.loadImg[3] && <div className={aboutStyle['about-4']} style={{ width: '100%', height: '100%' }} ></div>}\n                        </Col>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 14 }} xl={{ span: 14 }} style={{ height: textContent2Height }}>\n                            <Layout style={{ padding: content2Padding }}>\n                                <Title level={1}>Getting in Touch</Title>\n                                <div className={aboutStyle.aboutText} style={{ marginBottom: '1em' }}>\n                                    If you need any further information, please feel free to contact me at <Text copyable underline>shurintou@gmail.com</Text>,\n                                    or just leave a message to the <Text underline><Link onClick={this.scrollToGitalk}>message board</Link></Text> below.\n                                </div>\n                                <p className={aboutStyle.aboutText}>\n                                    If you are interested in this blog, or think the content of the blog is helpful, it would be very kind of you to star the <Text underline><Link href=\"https://github.com/shurintou/my_blog\" target=\"_blank\">blog repository</Link></Text> .\n                                </p>\n                            </Layout>\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <Row>\n                        <Col xs={1} sm={1} md={3} lg={3} xl={3}>\n                        </Col>\n                        <Col xs={22} sm={22} md={18} lg={18} xl={18}>\n                            <Gitalk blogId={config.aboutProps.messageBoardIssueId} />\n                        </Col>\n                    </Row>\n                </Space>\n                <BackTop target={() => document} />{/* default target value '()=> window' is not work. */}\n            </Layout>\n        )\n    }\n}\n"],"names":["GitalkCompo","props","blogId","useEffect","gitalkProps","config","number","perPage","Gitalk","render","renderGitalk","id","cryptoJS","require","configObj","gitProps","JSON","parse","AES","decrypt","toString","enc","Utf8","antdProps","themeColor","borderColor","titleBackgroundColor","paginationTextColor","blogProps","blogListItemCountPerPage","commentCountPerPage","previewLine","aboutProps","messageBoardIssueId","eventProps","resizeDebounceDelay","scrollDebounceDelay","markdownProps","trBackgroundColor","trBorderColor","Text","Typography","Title","Link","About","imgDivRefs","windowResizeDebounceFunc","scrollToGitalk","state","pcRenderMode","window","innerWidth","document","documentElement","clientWidth","loadImg","showImgDistance","windowInnerWidth","windowInnerHeight","innerHeight","clientHeight","windowResizeFunc","newWindowInnerWidth","newWindowInnerHeight","setState","windowScrollFunc","newLoadImg","i","imgDiv","splice","getBoundingClientRect","top","debounce","gitalkEl","getElementById","doScrolling","this","addEventListener","removeEventListener","imageContent1Height","textContent1Height","imageContent2Height","textContent2Height","content1Padding","content2Padding","direction","size","xs","span","sm","md","lg","push","xl","style","height","ref","el","className","aboutStyle","width","pull","padding","level","keyboard","Date","getFullYear","marginBottom","copyable","underline","onClick","href","target","React"],"sourceRoot":""}