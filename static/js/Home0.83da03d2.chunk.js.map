{"version":3,"file":"static/js/Home0.83da03d2.chunk.js","mappings":"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","sources":["components/others/gitalk/index.tsx","pages/about/index.tsx","webpack://my-blog/./src/pages/about/index.module.css?b913"],"sourcesContent":["import React, { useEffect } from 'react'\nimport Gitalk from \"gitalk\"\nimport 'gitalk/dist/gitalk.css'\nimport { GitalkProps } from '../../../types/index'\nimport config from '../../../config/config'\nimport { useAppSelector } from '../../../redux/hooks'\n\nconst GitalkCompo: React.FC<GitalkProps> = (props) => {\n    const selectedLanguage = useAppSelector((state) => state.language.value)\n\n    const { blogId } = props\n\n    useEffect(() => {\n        function renderGitalk(blogId: number) {\n            const gitalkProps = { ...config.gitProps, language: selectedLanguage, number: blogId, perPage: config.blogProps.commentCountPerPage }\n            const gitalk = new Gitalk(gitalkProps)\n            const gitalkContainerEl = document.querySelector('#gitalk-container')\n            if (gitalkContainerEl) { // gitalk didn't offer any api to rerender the component so do it manually.\n                let childEls = gitalkContainerEl.childNodes\n                childEls.forEach(childEl => {\n                    gitalkContainerEl.removeChild(childEl)\n                })\n            }\n            gitalk.render('gitalk-container')\n        }\n        if (props.shouldRender) renderGitalk(blogId)\n\n    }, [blogId, selectedLanguage, props.shouldRender])\n\n    return (\n        <div id=\"gitalk-container\" lang={selectedLanguage}></div>\n    )\n}\n\nconst GitalkModule = (props: GitalkProps) => <GitalkCompo {...props}></GitalkCompo>\n\nexport default GitalkModule","import React, { useEffect, useState, useRef } from 'react'\nimport { Layout, Row, Col, Typography, Space, Divider, BackTop, } from 'antd'\nimport Gitalk from '../../components//others/gitalk'\nimport config from '../../config/config'\nimport { debounce, doScrolling } from '../../utils/common'\nimport aboutStyle from './index.module.css'\nimport { useAppSelector } from '../../redux/hooks'\nimport { JA_LANGUAGE, ZH_LANGUAGE } from '../../config/constant'\n\nconst { Text, Title, Link } = Typography\n\nconst AboutCompo: React.FC<{}> = () => {\n    const [pcRenderMode, setPcRenderMode] = useState(window.innerWidth >= 992 || document.documentElement.clientWidth >= 992)\n    const [loadImg, setLoadImg] = useState([false, false, false, false])\n    const [showImgDistance, setShowImgDistance] = useState(-100)\n    const [windowInnerHeight, setWindowInnerHeight] = useState(window.innerHeight || document.documentElement.clientHeight)\n    const [imageContent1Height, setImageContent1Height] = useState(pcRenderMode ? '35em' : '25em')\n    const [textContent1Height, setTextContent1Height] = useState(pcRenderMode ? '35em' : '')\n    const [imageContent2Height, setImageContent2Height] = useState(pcRenderMode ? '30em' : '25em')\n    const [textContent2Height, setTextContent2Height] = useState(pcRenderMode ? '30em' : '')\n    const [content1Padding, setContent1Padding] = useState(pcRenderMode ? '3.75rem 3rem 1.75rem 3rem' : '1em 0.5rem 0rem 0.5rem')\n    const [content2Padding, setContent2Padding] = useState(pcRenderMode ? '4.25rem 3rem 1.75rem 4.25rem' : '1em 0.5rem 0rem 0.5rem')\n\n    useEffect(() => {\n        setImageContent1Height(pcRenderMode ? '35em' : '25em')\n        setTextContent1Height(pcRenderMode ? '35em' : '')\n        setImageContent2Height(pcRenderMode ? '30em' : '25em')\n        setTextContent2Height(pcRenderMode ? '30em' : '')\n        setContent1Padding(pcRenderMode ? '3.75rem 3rem 1.75rem 3rem' : '1em 0.5rem 0rem 0.5rem')\n        setContent2Padding(pcRenderMode ? '4.25rem 3rem 1.75rem 4.25rem' : '1em 0.5rem 0rem 0.5rem')\n    }, [pcRenderMode])\n\n    const windowResizeFunc = () => {\n        const newWindowInnerWidth = window.innerWidth || document.documentElement.clientWidth\n        const newWindowInnerHeight = window.innerHeight || document.documentElement.clientHeight\n        setShowImgDistance(newWindowInnerWidth >= 992 ? (-newWindowInnerHeight / 4) : (-newWindowInnerHeight / 3))\n        setPcRenderMode(newWindowInnerWidth >= 992)\n        setWindowInnerHeight(newWindowInnerHeight)\n    }\n\n\n    // useRef to solve the re-render delay issue. \n    const scrolledTopRef = useRef(windowInnerHeight)\n    scrolledTopRef.current = windowInnerHeight\n    const loadImgRef = useRef(loadImg)\n    loadImgRef.current = loadImg\n    const imgDivRefs = useRef<Array<HTMLElement | null>>([])\n    const windowScrollFunc = () => {\n        let newLoadImg: Array<boolean> = [false, false, false, false] // must create a new Array, otherwise it will not re-render because Array is compared by Reference not Value. \n        const oldLoadImg = loadImgRef.current\n        for (let i = 0; i < 4; i++) {\n            const imgDiv = imgDivRefs.current[i]\n            if (imgDiv && !oldLoadImg[i]) {\n                newLoadImg.splice(i, 1, scrolledTopRef.current - imgDiv.getBoundingClientRect().top > (showImgDistance))\n            }\n            else {\n                newLoadImg.splice(i, 1, oldLoadImg[i])\n            }\n        }\n        setLoadImg(newLoadImg)\n    }\n\n    const windowResizeDebounceFunc = debounce(windowResizeFunc, config.eventProps.resizeDebounceDelay)\n\n    const scrollToGitalk = () => {\n        const gitalkEl: Element | null = document.getElementById('gitalk-container')\n        if (gitalkEl) {\n            doScrolling(gitalkEl, 500)\n        }\n    }\n\n    useEffect(() => {\n        windowResizeFunc()\n        windowScrollFunc()\n        window.addEventListener('resize', windowResizeDebounceFunc)\n        window.addEventListener('scroll', windowScrollFunc)\n        return () => {\n            window.removeEventListener('resize', windowResizeDebounceFunc)\n            window.removeEventListener('scroll', windowScrollFunc)\n        }\n        /* eslint-disable-next-line */\n    }, [])\n\n    const selectedLanguage = useAppSelector((state) => state.language.value)\n\n    return (\n        <Layout>\n            <Space direction=\"vertical\" size={'large'}>\n                <Row>\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 12, push: 12 }} xl={{ span: 12, push: 12 }} style={{ height: imageContent1Height }} ref={el => imgDivRefs.current[0] = el}>\n                        {loadImg[0] && <div className={aboutStyle['about-1']} style={{ width: '100%', height: '100%' }}></div>}\n                    </Col>\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 12, pull: 12 }} xl={{ span: 12, pull: 12 }} style={{ height: textContent1Height }}>\n                        <Layout style={{ padding: content1Padding }} lang={selectedLanguage}>\n                            {\n                                selectedLanguage === ZH_LANGUAGE.key ?\n                                    <React.Fragment>\n                                        <Title level={1}>关于本站</Title>\n                                        <p className={aboutStyle.aboutText}>\n                                            本网站是我的<Text keyboard>个人博客</Text>，我会在这里定期地记录分享一些编程经验和心得。\n                                        </p>\n                                        <p className={aboutStyle.aboutText}>\n                                            文章内容主要涉足<Text keyboard>Web编程</Text>的各个领域，使用的语言主要是 Java, Javascript 等。\n                                        </p>\n                                    </React.Fragment>\n                                    : selectedLanguage === JA_LANGUAGE.key ?\n                                        <React.Fragment>\n                                            <Title level={1}>サイトについて</Title>\n                                            <p className={aboutStyle.aboutText}>\n                                                こちらのサイトは、私が定期的にプログラミングの考えや経験を共有する<Text keyboard>ブログ</Text>です。\n                                            </p>\n                                            <p className={aboutStyle.aboutText}>\n                                                記事のトピックには、主に Java, Javascript などの<Text keyboard>Webプログラミング</Text>分野の内容が含まれます。\n                                            </p>\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            <Title level={1}>About the Site</Title>\n                                            <p className={aboutStyle.aboutText}>\n                                                This is a <Text keyboard>blog</Text> which I regularly share some thoughts and experiences in my coding life.\n                                            </p>\n                                            <p className={aboutStyle.aboutText}>\n                                                The topic will mostly includes web development languages that address most facets of<Text keyboard>Web Programming</Text>,\n                                                such as Java, Javascript and so on.\n                                            </p>\n                                        </React.Fragment>\n                            }\n                        </Layout>\n                    </Col>\n                </Row>\n                <Divider />\n                <Row>\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 10 }} xl={{ span: 10 }} style={{ height: imageContent2Height }} ref={el => imgDivRefs.current[1] = el}>\n                        {loadImg[1] && <div className={aboutStyle['about-2']} style={{ width: '100%', height: '100%' }}></div>}\n                    </Col>\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 14 }} xl={{ span: 14 }} style={{ height: textContent2Height }}>\n                        <Layout style={{ padding: content2Padding }} lang={selectedLanguage}>\n                            {\n                                selectedLanguage === ZH_LANGUAGE.key ?\n                                    <React.Fragment>\n                                        <Title level={1}>关于本人</Title>\n                                        <p className={aboutStyle.aboutText}>\n                                            我来自<Text keyboard>中国</Text>，从2013年开始来日本留学，最终以硕士学位毕业于东京大学并留在日本工作。\n                                        </p>\n                                        <p className={aboutStyle.aboutText}>\n                                            现就职于<Text keyboard>东京</Text>的一家IT公司负责Web开发，工作{new Date().getFullYear() - 2019}年期间参与并成功上线了多个大型项目。\n                                        </p>\n                                    </React.Fragment>\n                                    : selectedLanguage === JA_LANGUAGE.key ?\n                                        <React.Fragment>\n                                            <Title level={1}>私について</Title>\n                                            <p className={aboutStyle.aboutText}>\n                                                私は<Text keyboard>中国</Text>出身で、2013年から日本へ留学しに来て、大学院生として東京大学を卒業しました。\n                                            </p>\n                                            <p className={aboutStyle.aboutText}>\n                                                現在<Text keyboard>東京</Text>でWeb開発者として務めており、{new Date().getFullYear() - 2019}年間で複数のプロジェクトに参画して成功させた経験が蓄積できました。\n                                            </p>\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            <Title level={1}>About Me</Title>\n                                            <p className={aboutStyle.aboutText}>\n                                                I am from<Text keyboard>China</Text>.\n                                                I came to Japan in 2013 and after 2 years Japanese study plus 3 years university research,\n                                                I finally graduated from The University of Tokyo with a master degree.\n                                            </p>\n                                            <p className={aboutStyle.aboutText}>\n                                                I currently work in<Text keyboard>Tokyo</Text>as a web developer with {new Date().getFullYear() - 2019} years work experience and several successful projects under my belt.\n                                            </p>\n                                        </React.Fragment>\n                            }\n                        </Layout>\n                    </Col>\n                </Row>\n                <Divider />\n                <Row>\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 10, push: 14 }} xl={{ span: 10, push: 14 }} style={{ height: imageContent2Height }} ref={el => imgDivRefs.current[2] = el}>\n                        {loadImg[2] && <div className={aboutStyle['about-3']} style={{ width: '100%', height: '100%' }} ></div>}\n                    </Col>\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 14, pull: 10 }} xl={{ span: 14, pull: 10 }} style={{ height: textContent2Height }}>\n                        <Layout style={{ padding: content1Padding }} lang={selectedLanguage}>\n                            {\n                                selectedLanguage === ZH_LANGUAGE.key ?\n                                    <React.Fragment>\n                                        <Title level={1}>关于编程</Title>\n                                        <p className={aboutStyle.aboutText}>\n                                            我热爱<Text keyboard>创造新事物</Text>，把一个想法从无到有实现出来能够给我巨大的成就感，而编程于我便是实现这些想法的有力工具。\n                                        </p>\n                                        <p className={aboutStyle.aboutText}>\n                                            而且在日新月异的计算机世界里，<Text keyboard>学无止境</Text>是基本准则，学习一项新技术、语言或者框架都可以让我保持新鲜感和求知欲。\n                                        </p>\n                                    </React.Fragment>\n                                    : selectedLanguage === JA_LANGUAGE.key ?\n                                        <React.Fragment>\n                                            <Title level={1}>なぜプログラマーに？</Title>\n                                            <p className={aboutStyle.aboutText}>\n                                                <Text keyboard>ものづくり</Text>が好きで、プログラマーは、コードを書いてゼロからきちんと働くシステムまで作成し、ものづくりの達成感のある仕事ですから。\n                                            </p>\n                                            <p className={aboutStyle.aboutText}>\n                                                また、いつも変化が激しいIT業界では、常に新しい技術や言語、フレームワークなどを<Text keyboard>勉強</Text>することで刺激を受け、日々の成長は実感できますから。\n                                            </p>\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            <Title level={1}>Why Coding ?</Title>\n                                            <p className={aboutStyle.aboutText}>\n                                                I like<Text keyboard>Creating Stuff</Text>and that's exactly what coding does.\n                                                It makes a idea from zero to reality, from which I got great excitement and satisfaction.\n                                            </p>\n                                            <p className={aboutStyle.aboutText}>\n                                                Besides, the world of computer science is always Changing.\n                                                <Text keyboard>Learning</Text> a new technology, language, design pattern or framework keeps me passionate.\n                                            </p>\n                                        </React.Fragment>\n                            }\n                        </Layout>\n                    </Col>\n                </Row>\n                <Divider />\n                <Row>\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 10 }} xl={{ span: 10 }} style={{ height: imageContent2Height }} ref={el => imgDivRefs.current[3] = el}>\n                        {loadImg[3] && <div className={aboutStyle['about-4']} style={{ width: '100%', height: '100%' }} ></div>}\n                    </Col>\n                    <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 14 }} xl={{ span: 14 }} style={{ height: textContent2Height }}>\n                        <Layout style={{ padding: content2Padding }} lang={selectedLanguage}>\n                            {\n                                selectedLanguage === ZH_LANGUAGE.key ?\n                                    <React.Fragment>\n                                        <Title level={1}>联系本人</Title>\n                                        <div className={aboutStyle.aboutText} style={{ marginBottom: '1em' }}>\n                                            如果您有任何问题需要咨询，请发送邮件至 <Text copyable underline>shurintou@gmail.com</Text>，\n                                            或在下方 <Text underline><Link onClick={scrollToGitalk}>留言板</Link></Text> 处留下简讯。\n                                        </div>\n                                        <p className={aboutStyle.aboutText}>\n                                            如果您觉得本站的内容不错对您起到了帮助，麻烦您给本站的 <Text underline><Link href=\"https://github.com/shurintou/my_blog\" target=\"_blank\">Github 仓库</Link></Text> 点星，谢谢。\n                                        </p>\n                                    </React.Fragment>\n                                    : selectedLanguage === JA_LANGUAGE.key ?\n                                        <React.Fragment>\n                                            <Title level={1}>お問い合わせ</Title>\n                                            <div className={aboutStyle.aboutText} style={{ marginBottom: '1em' }}>\n                                                何かご用がございましたら、お気軽に <Text copyable underline>shurintou@gmail.com</Text> まで聞いていただくか、\n                                                下記の <Text underline><Link onClick={scrollToGitalk}>メッセージボード</Link></Text> にコメントをください。\n                                            </div>\n                                            <p className={aboutStyle.aboutText}>\n                                                また、当サイトがお気に入りでしたら、<Text underline><Link href=\"https://github.com/shurintou/my_blog\" target=\"_blank\">Github リポジトリ</Link></Text> にスターをいただければ幸いです。\n                                            </p>\n                                        </React.Fragment>\n                                        :\n                                        <React.Fragment>\n                                            <Title level={1}>Getting in Touch</Title>\n                                            <div className={aboutStyle.aboutText} style={{ marginBottom: '1em' }}>\n                                                If you need any further information, please feel free to contact me at <Text copyable underline>shurintou@gmail.com</Text>,\n                                                or just leave a message to the <Text underline><Link onClick={scrollToGitalk}>message board</Link></Text> below.\n                                            </div>\n                                            <p className={aboutStyle.aboutText}>\n                                                If you are interested in this blog, or think the content of the blog is helpful, it would be very kind of you to star the <Text underline><Link href=\"https://github.com/shurintou/my_blog\" target=\"_blank\">blog's Github repository</Link></Text> .\n                                            </p>\n                                        </React.Fragment>\n                            }\n                        </Layout>\n                    </Col>\n                </Row>\n                <Divider />\n                <Row>\n                    <Col xs={1} sm={1} md={3} lg={3} xl={3}>\n                    </Col>\n                    <Col xs={22} sm={22} md={18} lg={18} xl={18}>\n                        <Gitalk blogId={config.aboutProps.messageBoardIssueId} shouldRender={true} />\n                    </Col>\n                </Row>\n            </Space>\n            <BackTop target={() => document} />{/* default target value '()=> window' is not work. */}\n        </Layout>\n    )\n}\n\nconst AboutModule = () => <AboutCompo />\nexport default AboutModule\n\n","// extracted by mini-css-extract-plugin\nexport default {\"about-1\":\"about_about-1__pzV2S\",\"about-2\":\"about_about-2__S-2ZA\",\"about-3\":\"about_about-3__b3MYc\",\"about-4\":\"about_about-4__voaZb\",\"aboutText\":\"about_aboutText__DiDM3\"};"],"names":["GitalkCompo","props","selectedLanguage","useAppSelector","state","language","value","blogId","useEffect","shouldRender","gitalkProps","config","number","perPage","gitalk","Gitalk","gitalkContainerEl","document","querySelector","childNodes","forEach","childEl","removeChild","render","renderGitalk","id","lang","Text","Typography","Title","Link","AboutCompo","useState","window","innerWidth","documentElement","clientWidth","pcRenderMode","setPcRenderMode","loadImg","setLoadImg","showImgDistance","setShowImgDistance","innerHeight","clientHeight","windowInnerHeight","setWindowInnerHeight","imageContent1Height","setImageContent1Height","textContent1Height","setTextContent1Height","imageContent2Height","setImageContent2Height","textContent2Height","setTextContent2Height","content1Padding","setContent1Padding","content2Padding","setContent2Padding","windowResizeFunc","newWindowInnerWidth","newWindowInnerHeight","scrolledTopRef","useRef","current","loadImgRef","imgDivRefs","windowScrollFunc","newLoadImg","oldLoadImg","i","imgDiv","splice","getBoundingClientRect","top","windowResizeDebounceFunc","debounce","scrollToGitalk","gitalkEl","getElementById","doScrolling","addEventListener","removeEventListener","direction","size","xs","span","sm","md","lg","push","xl","style","height","ref","el","className","aboutStyle","width","pull","padding","ZH_LANGUAGE","level","keyboard","JA_LANGUAGE","Date","getFullYear","marginBottom","copyable","underline","onClick","href","target"],"sourceRoot":""}