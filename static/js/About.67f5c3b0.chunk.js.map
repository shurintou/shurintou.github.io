{"version":3,"file":"static/js/About.67f5c3b0.chunk.js","mappings":"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","sources":["components/others/gitalk/index.tsx","webpack://my-blog/./src/pages/about/index.module.css?b913","pages/about/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport Gitalk from \"gitalk\"\nimport 'gitalk/dist/gitalk.css'\nimport { GitalkProps } from '../../../types/index'\nimport config from '../../../config/config'\nimport { useAppSelector } from '../../../redux/hooks'\n\nconst GitalkCompo: React.FC<GitalkProps> = (props) => {\n    const selectedLanguage = useAppSelector((state) => state.language.value)\n\n    const { blogId } = props\n\n    useEffect(() => {\n        function renderGitalk(blogId: number) {\n            const gitalkProps = { ...config.gitProps, language: selectedLanguage, number: blogId, perPage: config.blogProps.commentCountPerPage }\n            const gitalk = new Gitalk(gitalkProps)\n            const gitalkContainerEl = document.querySelector('#gitalk-container')\n            if (gitalkContainerEl) { // gitalk didn't offer any api to rerender the component so do it manually.\n                let childEls = gitalkContainerEl.childNodes\n                childEls.forEach(childEl => {\n                    gitalkContainerEl.removeChild(childEl)\n                })\n            }\n            gitalk.render('gitalk-container')\n        }\n        renderGitalk(blogId)\n\n    }, [blogId, selectedLanguage])\n\n    return (\n        <div id=\"gitalk-container\" lang={selectedLanguage}></div>\n    )\n}\n\nconst GitalkModule = (props: GitalkProps) => <GitalkCompo {...props}></GitalkCompo>\n\nexport default GitalkModule","// extracted by mini-css-extract-plugin\nexport default {\"about-1\":\"about_about-1__pzV2S\",\"about-2\":\"about_about-2__S-2ZA\",\"about-3\":\"about_about-3__b3MYc\",\"about-4\":\"about_about-4__voaZb\",\"aboutText\":\"about_aboutText__DiDM3\"};","import React from 'react'\nimport { Layout, Row, Col, Typography, Space, Divider, BackTop, } from 'antd'\nimport Gitalk from '../../components//others/gitalk'\nimport config from '../../config/config'\nimport { debounce, doScrolling } from '../../utils/common'\nimport aboutStyle from './index.module.css'\nconst { Text, Title, Link } = Typography\n\nexport default class About extends React.Component<{}, { [key: string]: any }>  {\n    private imgDivRefs: Array<HTMLDivElement | null>\n    private windowResizeDebounceFunc: () => any\n    private scrollToGitalk: () => any\n    constructor(props: Object) {\n        super(props)\n        this.imgDivRefs = []\n        this.state = {\n            pcRenderMode: window.innerWidth >= 992 || document.documentElement.clientWidth >= 992,\n            loadImg: [false, false, false, false],\n            showImgDistance: -100,\n            windowInnerWidth: window.innerWidth || document.documentElement.clientWidth,\n            windowInnerHeight: window.innerHeight || document.documentElement.clientHeight,\n            windowResizeFunc: () => {\n                const newWindowInnerWidth = window.innerWidth || document.documentElement.clientWidth\n                const newWindowInnerHeight = window.innerHeight || document.documentElement.clientHeight\n                this.setState({ showImgDistance: newWindowInnerWidth >= 992 ? (-newWindowInnerHeight / 4) : (-newWindowInnerHeight / 3) })\n                this.setState({ pcRenderMode: newWindowInnerWidth >= 992 })\n                this.setState({ windowInnerWidth: newWindowInnerWidth })\n                this.setState({ windowInnerHeight: newWindowInnerHeight })\n            },\n            windowScrollFunc: () => {\n                let newLoadImg: Array<boolean> = this.state.loadImg\n                for (let i = 0; i < 4; i++) {\n                    const imgDiv = this.imgDivRefs[i]\n                    if (imgDiv && !newLoadImg[i]) {\n                        newLoadImg.splice(i, 1, this.state.windowInnerHeight - imgDiv.getBoundingClientRect().top > (this.state.showImgDistance))\n                    }\n                }\n                this.setState({ loadImg: newLoadImg })\n            }\n        }\n        this.windowResizeDebounceFunc = debounce(this.state.windowResizeFunc, config.eventProps.resizeDebounceDelay)\n        this.scrollToGitalk = () => {\n            const gitalkEl: Element | null = document.getElementById('gitalk-container')\n            if (gitalkEl) {\n                doScrolling(gitalkEl, 500)\n            }\n        }\n    }\n\n\n    componentDidMount() {\n        this.state.windowResizeFunc()\n        this.state.windowScrollFunc()\n        window.addEventListener('resize', this.windowResizeDebounceFunc)\n        window.addEventListener('scroll', this.state.windowScrollFunc)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.windowResizeDebounceFunc)\n        window.removeEventListener('scroll', this.state.windowScrollFunc)\n    }\n\n    render() {\n        const imageContent1Height = this.state.pcRenderMode ? '35em' : '25em'\n        const textContent1Height = this.state.pcRenderMode ? '35em' : ''\n        const imageContent2Height = this.state.pcRenderMode ? '30em' : '25em'\n        const textContent2Height = this.state.pcRenderMode ? '30em' : ''\n        const content1Padding = this.state.pcRenderMode ? '3.75rem 3rem 1.75rem 3rem' : '1em 0.5rem 0rem 0.5rem'\n        const content2Padding = this.state.pcRenderMode ? '4.25rem 3rem 1.75rem 4.25rem' : '1em 0.5rem 0rem 0.5rem'\n        return (\n            <Layout>\n                <Space direction=\"vertical\" size={'large'}>\n                    <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 12, push: 12 }} xl={{ span: 12, push: 12 }} style={{ height: imageContent1Height }} ref={el => this.imgDivRefs[0] = el}>\n                            {this.state.loadImg[0] && <div className={aboutStyle['about-1']} style={{ width: '100%', height: '100%' }}></div>}\n                        </Col>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 12, pull: 12 }} xl={{ span: 12, pull: 12 }} style={{ height: textContent1Height }}>\n\n                            <Layout style={{ padding: content1Padding }}>\n                                <Title level={1}>About Blog</Title>\n                                <p className={aboutStyle.aboutText}>\n                                    This is a blog that I regularly share some thoughts and experiences in my coding life.\n                                </p>\n                                <p className={aboutStyle.aboutText}>\n                                    The topic will mostly includes web development languages that address most facets of<Text keyboard>Web Programming</Text>,\n                                    such as Java, Javascript and so on.\n                                </p>\n                            </Layout>\n\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 10 }} xl={{ span: 10 }} style={{ height: imageContent2Height }} ref={el => this.imgDivRefs[1] = el}>\n                            {this.state.loadImg[1] && <div className={aboutStyle['about-2']} style={{ width: '100%', height: '100%' }}></div>}\n                        </Col>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 14 }} xl={{ span: 14 }} style={{ height: textContent2Height }}>\n                            <Layout style={{ padding: content2Padding }}>\n                                <Title level={1}>About Me</Title>\n                                <p className={aboutStyle.aboutText}>\n                                    I am from<Text keyboard>China</Text>.\n                                    I came to Japan in 2013 and after 2 years Japanese study plus 3 years university research,\n                                    I finally graduated from The University of Tokyo with a master degree.\n                                </p>\n                                <p className={aboutStyle.aboutText}>\n                                    I currently work in<Text keyboard>Tokyo</Text>as a web developer with {new Date().getFullYear() - 2019} years work experience and several successful projects under my belt.\n                                </p>\n                            </Layout>\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 10, push: 14 }} xl={{ span: 10, push: 14 }} style={{ height: imageContent2Height }} ref={el => this.imgDivRefs[2] = el}>\n                            {this.state.loadImg[2] && <div className={aboutStyle['about-3']} style={{ width: '100%', height: '100%' }} ></div>}\n                        </Col>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 14, pull: 10 }} xl={{ span: 14, pull: 10 }} style={{ height: textContent2Height }}>\n                            <Layout style={{ padding: content1Padding }}>\n                                <Title level={1}>Why Coding ?</Title>\n                                <p className={aboutStyle.aboutText}>\n                                    I like<Text keyboard>Creating Stuff</Text>and that's exactly what coding does.\n                                    It makes a idea from zero to reality, from which I got great excitement and satisfaction.\n                                </p>\n                                <p className={aboutStyle.aboutText}>\n                                    Besides, the world of computer science is always<Text keyboard>Changing</Text>.\n                                    Learning a new technology, language, design pattern or framework keeps me passionate.\n                                </p>\n                            </Layout>\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <Row>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 10 }} xl={{ span: 10 }} style={{ height: imageContent2Height }} ref={el => this.imgDivRefs[3] = el}>\n                            {this.state.loadImg[3] && <div className={aboutStyle['about-4']} style={{ width: '100%', height: '100%' }} ></div>}\n                        </Col>\n                        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 14 }} xl={{ span: 14 }} style={{ height: textContent2Height }}>\n                            <Layout style={{ padding: content2Padding }}>\n                                <Title level={1}>Getting in Touch</Title>\n                                <div className={aboutStyle.aboutText} style={{ marginBottom: '1em' }}>\n                                    If you need any further information, please feel free to contact me at <Text copyable underline>shurintou@gmail.com</Text>,\n                                    or just leave a message to the <Text underline><Link onClick={this.scrollToGitalk}>message board</Link></Text> below.\n                                </div>\n                                <p className={aboutStyle.aboutText}>\n                                    If you are interested in this blog, or think the content of the blog is helpful, it would be very kind of you to star the <Text underline><Link href=\"https://github.com/shurintou/my_blog\" target=\"_blank\">blog repository</Link></Text> .\n                                </p>\n                            </Layout>\n                        </Col>\n                    </Row>\n                    <Divider />\n                    <Row>\n                        <Col xs={1} sm={1} md={3} lg={3} xl={3}>\n                        </Col>\n                        <Col xs={22} sm={22} md={18} lg={18} xl={18}>\n                            <Gitalk blogId={config.aboutProps.messageBoardIssueId} />\n                        </Col>\n                    </Row>\n                </Space>\n                <BackTop target={() => document} />{/* default target value '()=> window' is not work. */}\n            </Layout>\n        )\n    }\n}\n"],"names":["GitalkCompo","props","selectedLanguage","useAppSelector","state","language","value","blogId","useEffect","gitalkProps","config","number","perPage","gitalk","Gitalk","gitalkContainerEl","document","querySelector","childNodes","forEach","childEl","removeChild","render","renderGitalk","id","lang","Text","Typography","Title","Link","About","imgDivRefs","windowResizeDebounceFunc","scrollToGitalk","pcRenderMode","window","innerWidth","documentElement","clientWidth","loadImg","showImgDistance","windowInnerWidth","windowInnerHeight","innerHeight","clientHeight","windowResizeFunc","newWindowInnerWidth","newWindowInnerHeight","setState","windowScrollFunc","newLoadImg","i","imgDiv","splice","getBoundingClientRect","top","debounce","gitalkEl","getElementById","doScrolling","this","addEventListener","removeEventListener","imageContent1Height","textContent1Height","imageContent2Height","textContent2Height","content1Padding","content2Padding","direction","size","xs","span","sm","md","lg","push","xl","style","height","ref","el","className","aboutStyle","width","pull","padding","level","keyboard","Date","getFullYear","marginBottom","copyable","underline","onClick","href","target","React"],"sourceRoot":""}